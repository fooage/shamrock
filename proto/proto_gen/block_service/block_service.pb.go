// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: block_service.proto

package block_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetChunkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueKey  string `protobuf:"bytes,1,opt,name=unique_key,json=uniqueKey,proto3" json:"unique_key,omitempty"`
	FromMaster bool   `protobuf:"varint,2,opt,name=from_master,json=fromMaster,proto3" json:"from_master,omitempty"`
}

func (x *GetChunkReq) Reset() {
	*x = GetChunkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChunkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkReq) ProtoMessage() {}

func (x *GetChunkReq) ProtoReflect() protoreflect.Message {
	mi := &file_block_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkReq.ProtoReflect.Descriptor instead.
func (*GetChunkReq) Descriptor() ([]byte, []int) {
	return file_block_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetChunkReq) GetUniqueKey() string {
	if x != nil {
		return x.UniqueKey
	}
	return ""
}

func (x *GetChunkReq) GetFromMaster() bool {
	if x != nil {
		return x.FromMaster
	}
	return false
}

type GetChunkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueKey string `protobuf:"bytes,1,opt,name=unique_key,json=uniqueKey,proto3" json:"unique_key,omitempty"`
	Binary    []byte `protobuf:"bytes,2,opt,name=binary,proto3" json:"binary,omitempty"`
}

func (x *GetChunkResp) Reset() {
	*x = GetChunkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChunkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkResp) ProtoMessage() {}

func (x *GetChunkResp) ProtoReflect() protoreflect.Message {
	mi := &file_block_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkResp.ProtoReflect.Descriptor instead.
func (*GetChunkResp) Descriptor() ([]byte, []int) {
	return file_block_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetChunkResp) GetUniqueKey() string {
	if x != nil {
		return x.UniqueKey
	}
	return ""
}

func (x *GetChunkResp) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

// When the unique key here is the same, the file will be overwritten.
type SaveChunkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueKey string `protobuf:"bytes,1,opt,name=unique_key,json=uniqueKey,proto3" json:"unique_key,omitempty"`
	Binary    []byte `protobuf:"bytes,2,opt,name=binary,proto3" json:"binary,omitempty"`
}

func (x *SaveChunkReq) Reset() {
	*x = SaveChunkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveChunkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveChunkReq) ProtoMessage() {}

func (x *SaveChunkReq) ProtoReflect() protoreflect.Message {
	mi := &file_block_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveChunkReq.ProtoReflect.Descriptor instead.
func (*SaveChunkReq) Descriptor() ([]byte, []int) {
	return file_block_service_proto_rawDescGZIP(), []int{2}
}

func (x *SaveChunkReq) GetUniqueKey() string {
	if x != nil {
		return x.UniqueKey
	}
	return ""
}

func (x *SaveChunkReq) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

type SaveChunkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveChunkResp) Reset() {
	*x = SaveChunkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveChunkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveChunkResp) ProtoMessage() {}

func (x *SaveChunkResp) ProtoReflect() protoreflect.Message {
	mi := &file_block_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveChunkResp.ProtoReflect.Descriptor instead.
func (*SaveChunkResp) Descriptor() ([]byte, []int) {
	return file_block_service_proto_rawDescGZIP(), []int{3}
}

type RemoveChunkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueKey string `protobuf:"bytes,1,opt,name=unique_key,json=uniqueKey,proto3" json:"unique_key,omitempty"`
}

func (x *RemoveChunkReq) Reset() {
	*x = RemoveChunkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChunkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChunkReq) ProtoMessage() {}

func (x *RemoveChunkReq) ProtoReflect() protoreflect.Message {
	mi := &file_block_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChunkReq.ProtoReflect.Descriptor instead.
func (*RemoveChunkReq) Descriptor() ([]byte, []int) {
	return file_block_service_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveChunkReq) GetUniqueKey() string {
	if x != nil {
		return x.UniqueKey
	}
	return ""
}

type RemoveChunkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveChunkResp) Reset() {
	*x = RemoveChunkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChunkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChunkResp) ProtoMessage() {}

func (x *RemoveChunkResp) ProtoReflect() protoreflect.Message {
	mi := &file_block_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChunkResp.ProtoReflect.Descriptor instead.
func (*RemoveChunkResp) Descriptor() ([]byte, []int) {
	return file_block_service_proto_rawDescGZIP(), []int{5}
}

var File_block_service_proto protoreflect.FileDescriptor

var file_block_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0x45, 0x0a, 0x0c, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x2f, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x4b, 0x65, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x32, 0xef, 0x01, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1b, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_block_service_proto_rawDescOnce sync.Once
	file_block_service_proto_rawDescData = file_block_service_proto_rawDesc
)

func file_block_service_proto_rawDescGZIP() []byte {
	file_block_service_proto_rawDescOnce.Do(func() {
		file_block_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_service_proto_rawDescData)
	})
	return file_block_service_proto_rawDescData
}

var file_block_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_block_service_proto_goTypes = []interface{}{
	(*GetChunkReq)(nil),     // 0: block_service.GetChunkReq
	(*GetChunkResp)(nil),    // 1: block_service.GetChunkResp
	(*SaveChunkReq)(nil),    // 2: block_service.SaveChunkReq
	(*SaveChunkResp)(nil),   // 3: block_service.SaveChunkResp
	(*RemoveChunkReq)(nil),  // 4: block_service.RemoveChunkReq
	(*RemoveChunkResp)(nil), // 5: block_service.RemoveChunkResp
}
var file_block_service_proto_depIdxs = []int32{
	0, // 0: block_service.BlockService.GetChunk:input_type -> block_service.GetChunkReq
	2, // 1: block_service.BlockService.SaveChunk:input_type -> block_service.SaveChunkReq
	4, // 2: block_service.BlockService.RemoveChunk:input_type -> block_service.RemoveChunkReq
	1, // 3: block_service.BlockService.GetChunk:output_type -> block_service.GetChunkResp
	3, // 4: block_service.BlockService.SaveChunk:output_type -> block_service.SaveChunkResp
	5, // 5: block_service.BlockService.RemoveChunk:output_type -> block_service.RemoveChunkResp
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_block_service_proto_init() }
func file_block_service_proto_init() {
	if File_block_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_block_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChunkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChunkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveChunkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveChunkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChunkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChunkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_block_service_proto_goTypes,
		DependencyIndexes: file_block_service_proto_depIdxs,
		MessageInfos:      file_block_service_proto_msgTypes,
	}.Build()
	File_block_service_proto = out.File
	file_block_service_proto_rawDesc = nil
	file_block_service_proto_goTypes = nil
	file_block_service_proto_depIdxs = nil
}
